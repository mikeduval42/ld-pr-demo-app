{"ast":null,"code":"import _asyncToGenerator from \"/Users/michaelduval/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/michaelduval/Documents/GitHub/ld-pr-demo-app/src/components/chatbot.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport { withLDConsumer } from \"launchdarkly-react-client-sdk\";\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport axios from 'axios';\nimport niceRobot from \"./../images/happyRobot.png\";\nimport meanRobot from \"./../images/meanRobot.png\";\nimport pirateRobot from \"./../images/pirateRobot.png\";\n\nvar chatbot = function chatbot(_ref) {\n  var flags = _ref.flags,\n      ldClient = _ref.ldClient;\n  var personality = ldClient.variation(\"config-chatbot-personality\");\n\n  function changeAvatar() {\n    if (personality === 'pirate') {\n      return pirateRobot;\n    } else if (personality === 'mean') {\n      return meanRobot;\n    } else {\n      return niceRobot;\n    }\n  }\n\n  function changeTitle() {\n    if (personality === 'pirate') {\n      return 'ARRRRobot';\n    } else if (personality === 'mean') {\n      return 'Stack Overflow Bot';\n    } else {\n      return 'Answerbot';\n    }\n  }\n\n  function changeSubtitle() {\n    if (personality === 'pirate') {\n      return 'Here there be answers';\n    } else if (personality === 'mean') {\n      return 'Did you google it first?';\n    } else {\n      return 'e.g. How big is the Earth?';\n    }\n  }\n\n  var url = 'https://fxbft3m9yf.execute-api.us-east-2.amazonaws.com/default/answer?question=';\n\n  function sendRequest(_x) {\n    return _sendRequest.apply(this, arguments);\n  }\n\n  function _sendRequest() {\n    _sendRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(personality === 'placeholder')) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"Error: Bot not found.\");\n\n            case 4:\n              _context2.next = 6;\n              return axios.get(url);\n\n            case 6:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.data.answer);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _sendRequest.apply(this, arguments);\n  }\n\n  function URLify(string) {\n    var question = string.trim().replace(/\\s/g, '%20');\n    return url + question;\n  }\n\n  var handleNewUserMessage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(newMessage) {\n      var message;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"New message incoming! \".concat(newMessage)); // Now send the message throught the backend API\n\n              _context.next = 3;\n              return sendRequest(URLify(newMessage));\n\n            case 3:\n              message = _context.sent;\n              addResponseMessage(message);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNewUserMessage(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return flags.showChatbot ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    handleNewUserMessage: handleNewUserMessage,\n    title: changeTitle(),\n    subtitle: changeSubtitle(),\n    titleAvatar: changeAvatar(),\n    senderPlaceHolder: \"Ask a question\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withLDConsumer()(chatbot);","map":{"version":3,"names":["withLDConsumer","Widget","addResponseMessage","axios","niceRobot","meanRobot","pirateRobot","chatbot","flags","ldClient","personality","variation","changeAvatar","changeTitle","changeSubtitle","url","sendRequest","get","response","data","answer","URLify","string","question","trim","replace","handleNewUserMessage","newMessage","console","log","message","showChatbot"],"sources":["/Users/michaelduval/Documents/GitHub/ld-pr-demo-app/src/components/chatbot.js"],"sourcesContent":["\nimport { withLDConsumer } from \"launchdarkly-react-client-sdk\";\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\nimport axios from 'axios';\nimport niceRobot from \"./../images/happyRobot.png\";\nimport meanRobot from \"./../images/meanRobot.png\";\nimport pirateRobot from \"./../images/pirateRobot.png\";\n\n\nconst chatbot = ({ flags, ldClient }) => {\n  let personality = ldClient.variation(\"config-chatbot-personality\");\n\n  function changeAvatar() {\n    if (personality === 'pirate') {\n      return pirateRobot\n    } else if (personality === 'mean') {\n      return meanRobot\n    } else {\n      return niceRobot\n    }\n  }\n\n  function changeTitle() {\n    if (personality === 'pirate') {\n      return 'ARRRRobot'\n    } else if (personality === 'mean') {\n      return 'Stack Overflow Bot'\n    } else {\n      return 'Answerbot'\n    }\n  }\n\n  function changeSubtitle() {\n    if (personality === 'pirate') {\n      return 'Here there be answers'\n    } else if (personality === 'mean') {\n      return 'Did you google it first?'\n    } else {\n      return 'e.g. How big is the Earth?'\n    }\n  }\n\n  const url = 'https://fxbft3m9yf.execute-api.us-east-2.amazonaws.com/default/answer?question='\n\n  async function sendRequest(url) {\n    if (personality === 'placeholder') {\n      return \"Error: Bot not found.\"\n    } else {\n      const response = await axios.get(url);\n      return response.data.answer;\n    }\n    \n  }\n\n  function URLify(string) {\n    const question = string.trim().replace(/\\s/g, '%20');\n    return url + question\n  }\n\n  const handleNewUserMessage = async (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n    const message = await sendRequest(URLify(newMessage));\n    addResponseMessage(message);\n  };\n  \n  return flags.showChatbot ? (\n    <div>\n      <Widget \n        handleNewUserMessage={handleNewUserMessage}\n        title={changeTitle()}\n        subtitle={changeSubtitle()}\n        titleAvatar={changeAvatar()}\n        senderPlaceHolder='Ask a question'\n      />\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default withLDConsumer()(chatbot);"],"mappings":"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"},"metadata":{},"sourceType":"module"}